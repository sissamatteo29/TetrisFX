on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout your project
      - uses: actions/checkout@v2

      # Make sure the latest GraalVM is installed.
      # after this step env.JAVA_HOME and env.GRAALVM_HOME will point to the GraalVM location
      - name: Setup GraalVM built by Gluon
        uses: gluonhq/setup-graalvm@master
        # set GITHUB_TOKEN to avoid exceeding GitHub's API rate limit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Install extra requirements on top of ubuntu-latest
      - name: Install libraries
        run: |
          sudo apt-get update
          sudo apt install libasound2-dev libavcodec-dev libavformat-dev libavutil-dev libgl-dev libgtk-3-dev libpango1.0-dev libxtst-dev
      

      # Build your project using Maven
      # The android profile is used, which means a native build will be created for the gluonfx target android.
      # This step also uses some env variables taken from the repo secrets. See the section 'Setup Android Keystore' below.
      - name: Gluon Build
        run: |
          export ANDROID_SDK=$ANDROID_HOME
          mvn -Pandroid gluonfx:build gluonfx:package

      # Create staging directory in which the apk will be copied
      - name: Make staging directory
        run: mkdir staging

      # Copy the apk to the staging directory
      - name: Copy native images to staging
        run: cp -r target/gluonfx/aarch64-android/gvm/*apk staging

      # Upload the staging directoy as a build artifact
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
